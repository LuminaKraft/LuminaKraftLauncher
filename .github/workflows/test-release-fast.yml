name: Fast Release Test (Ubuntu Only)

on:
  push:
    tags:
      - 'test-*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for testing (e.g., test-v0.0.1)'
        required: true
        default: 'test-v0.0.1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-build-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            build-essential \
            curl \
            wget \
            file \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            libxdo-dev

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Build Tauri app (AppImage only for speed)
        run: npx tauri build --bundles appimage
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-linux-build
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage
          if-no-files-found: error

  test-create-release:
    needs: [test-build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/test-') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from tag or input
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG_NAME="${{ github.event.inputs.tag_name }}"
            VERSION=${TAG_NAME#test-v}
          else
            TAG_NAME=${GITHUB_REF#refs/tags/}
            VERSION=${TAG_NAME#test-v}
          fi
          
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Test Version: $VERSION"
          
          # Check if this is a pre-release from package.json
          IS_PRERELEASE=$(node -p "JSON.parse(require('fs').readFileSync('package.json', 'utf8')).isPrerelease || false")
          echo "IS_PRERELEASE=$IS_PRERELEASE" >> $GITHUB_OUTPUT
          
          echo "🔍 Debug package.json isPrerelease field:"
          node -p "const pkg = JSON.parse(require('fs').readFileSync('package.json', 'utf8')); console.log('isPrerelease:', pkg.isPrerelease, 'type:', typeof pkg.isPrerelease); pkg.isPrerelease"
          
          if [[ "$IS_PRERELEASE" == "true" ]]; then
            echo "✅ This is a PRE-RELEASE: $VERSION"
          else
            echo "✅ This is a STABLE release: $VERSION"
          fi

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List test artifacts
        run: |
          echo "=== Test Artifacts ==="
          find artifacts/ -name "*.AppImage" | sort

      - name: Test Release in Public Repository
        id: test_public_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_TOKEN }}
        with:
          repository: kristiangarcia/luminakraft-launcher-releases
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          name: "🧪 TEST: LuminaKraft Launcher ${{ steps.get_version.outputs.TAG_NAME }}"
          body: |
            # 🧪 TEST RELEASE - ${{ steps.get_version.outputs.TAG_NAME }}
            
            **⚠️ ESTO ES UN RELEASE DE PRUEBA - NO USAR EN PRODUCCIÓN**
            
            ## 🔍 Test Information
            - **Version**: `${{ steps.get_version.outputs.VERSION }}`
            - **Pre-release detected**: `${{ steps.get_version.outputs.IS_PRERELEASE }}`
            - **Build**: Solo Linux AppImage (test rápido)
            - **Propósito**: Validar sistema de releases
            
            ${{ steps.get_version.outputs.IS_PRERELEASE == 'true' && '✅ **PRE-RELEASE DETECTADO CORRECTAMENTE**' || '✅ **STABLE RELEASE DETECTADO CORRECTAMENTE**' }}
            
            ### 🐧 **Linux Test Build**
            - **AppImage** (`*.AppImage`) - Solo para testing
            
            ## 🔗 Enlaces de Test
            - 🏠 **Repo Privado**: https://github.com/kristiangarcia/luminakraft-launcher
            - 📦 **Repo Público**: https://github.com/kristiangarcia/luminakraft-launcher-releases
            
            **🗑️ Este release será eliminado después de las pruebas**
          draft: false
          prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE == 'true' }}
          files: |
            artifacts/**/*.AppImage

      - name: Test Release in Private Repository
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          name: "🧪 TEST: Internal Tracking ${{ steps.get_version.outputs.TAG_NAME }}"
          body: |
            # 🧪 TEST Release Interno - ${{ steps.get_version.outputs.TAG_NAME }}
            
            ## 🔗 **Test Release Público**
            **🌐 URL**: https://github.com/kristiangarcia/luminakraft-launcher-releases/releases/tag/${{ steps.get_version.outputs.TAG_NAME }}
            
            ## 🔍 **Test Results**
            - **Version**: `${{ steps.get_version.outputs.VERSION }}`
            - **Commit**: `${{ github.sha }}`
            - **Pre-release detected**: `${{ steps.get_version.outputs.IS_PRERELEASE }}`
            - **Pre-release boolean type**: `${{ steps.get_version.outputs.IS_PRERELEASE == 'true' }}`
            
            ### 📦 **Test Build**
            - ✅ **Linux**: AppImage (fast test)
            
            ${{ steps.get_version.outputs.IS_PRERELEASE == 'true' && '🧪 **TEST PRE-RELEASE SUCCESSFUL**' || '🎉 **TEST STABLE RELEASE SUCCESSFUL**' }}
            
            ---
            **🧪 Test release - will be cleaned up**
          draft: false
          prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE == 'true' }}
        continue-on-error: true

      - name: Test Summary
        run: |
          echo "=== 🧪 Test Release Summary ==="
          echo "✅ Version: ${{ steps.get_version.outputs.VERSION }}"
          echo "✅ Tag: ${{ steps.get_version.outputs.TAG_NAME }}"
          echo "✅ Pre-release: ${{ steps.get_version.outputs.IS_PRERELEASE }}"
          echo "✅ Pre-release boolean: ${{ steps.get_version.outputs.IS_PRERELEASE == 'true' }}"
          echo "✅ Public test release: https://github.com/kristiangarcia/luminakraft-launcher-releases/releases/tag/${{ steps.get_version.outputs.TAG_NAME }}"
          echo "✅ Private test release: https://github.com/kristiangarcia/luminakraft-launcher/releases/tag/${{ steps.get_version.outputs.TAG_NAME }}"
          echo ""
          echo "🏗️ **Test Build:**"
          echo "  🐧 Linux: AppImage (fast test only)"
          echo ""
          echo "🎯 **Test completed! Check releases to verify prerelease detection.**" 